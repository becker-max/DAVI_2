    // The svg
    var svg = d3.select("svg"),
        width = +svg.attr("width"),
        height = +svg.attr("height");

    // Map and projection
    var path = d3.geoPath();
    var projection = d3.geoMercator()
        .scale(140)
        .center([25, -20])
        .translate([width / 2, height / 4 * 3]);

    // Data and color scale
    var data = d3.map();
    var colorScale = d3.scaleThreshold()
        //.domain([50, 55, 60, 65, 70, 75, 80])
        .domain([1000000,2000000,3000000,4000000,5000000,6000000,7000000,8000000])
        .range(d3.schemeOranges[7]);

    // Load external data and boot
    d3.queue()
        .defer(d3.json, "https://raw.githubusercontent.com/holtzy/D3-graph-gallery/master/DATA/world.geojson")
        .defer(d3.csv, "./data/Dataset_klein.csv")
        .await(ready);
    //console.log(test);

    function ready(error, topo, test) {
        
    var overall = d3.nest()
        .key(function(d) { return d.cc; })
        .rollup(function(v) { return Math.round(d3.mean(v, function(d) { return parseInt(d.value_eur); })); })
		//.rollup(function(v) { return Math.round(d3.mean(v, function(d) { return parseInt(d.overall); })); })
        .object(test);
        
        data = d3.map(overall);
        
        console.log(data);
        
        let mouseOver = function (d) {
            d3.selectAll(".Country")
                .transition()
                .duration(200)
                .style("opacity", .5)
            d3.select(this)
                .transition()
                .duration(200)
                .style("opacity", 1)
                .style("stroke", "black")

            d3.select(".tooltip")
                .style("display", "block")
                //.style("left", xPos + "px")
                //.style("top", yPos + "px")
                .style("top", (d3.event.pageY) + "px")
                .style("left", (d3.event.pageX) + "px")
                .html("Country Code: " + d.id + " " + "Average: " + data.get(d.id))

        }

        let mouseLeave = function (d) {
            d3.selectAll(".Country")
                .transition()
                .duration(200)
                .style("opacity", .8)
            d3.select(this)
                .transition()
                .duration(200)
                .style("stroke", "transparent")
            d3.select(".tooltip")
                .style("display", "none")
                .html("")

        }

        d3.select("#circleBasicTooltip")
            .on("mouseover", function () {
                return tooltip.style("visibility", "visible");
            })
            .on("mousemove", function () {
                return tooltip.style("top", (event.pageY - 800) + "px").style("left", (event.pageX - 800) + "px");
            })
            .on("mouseout", function () {
                return tooltip.style("visibility", "hidden");
            });

        // Draw the map
        svg.append("g")
            .selectAll("path")
            .data(topo.features)
            .enter()
            .append("path")
            // draw each country
            //.attr("data", d3.csv("./data/Dataset_Country - Durchschnitte.csv"))
            .attr("d", d3.geoPath()
                .projection(projection)
            )
            // set the color of each country
            .attr("fill", function (d) {
                d.total = data.get(d.id) || 0;
                return colorScale(d.total);
            })

            .style("stroke", "transparent")
            .attr("class", function (d) {
                return "Country"
            })
            .style("opacity", .8)
            .on("mouseover", mouseOver)
            .on("mouseleave", mouseLeave)
    }
